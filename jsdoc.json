{
    "functions": [
        {
            "name": "bindDefaults",
            "access": "",
            "virtual": false,
            "description": "For bindDefaults",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "method annotation function"
            }
        },
        {
            "name": "bindScope",
            "access": "",
            "virtual": false,
            "description": "For bindScope",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Class annotation function"
            }
        },
        {
            "name": "siteToast",
            "access": "",
            "virtual": false,
            "description": "Site toast mix",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Annotated class"
            }
        },
        {
            "name": "reset",
            "access": "",
            "virtual": false,
            "description": "Rest toasts",
            "parameters": [
                {
                    "name": "queues",
                    "type": "Object.<string, Array.<string>>",
                    "description": "Toast queue",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "showError",
            "access": "",
            "virtual": false,
            "description": "Show error toast",
            "parameters": [
                {
                    "name": "message",
                    "type": "string",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "showInfo",
            "access": "",
            "virtual": false,
            "description": "Show info toast",
            "parameters": [
                {
                    "name": "message",
                    "type": "string",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "showWarn",
            "access": "",
            "virtual": false,
            "description": "Show warn toast",
            "parameters": [
                {
                    "name": "message",
                    "type": "string",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "withBack",
            "access": "",
            "virtual": false,
            "description": "withBack mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "goBack",
            "access": "",
            "virtual": false,
            "description": "Go Back",
            "parameters": [],
            "examples": []
        },
        {
            "name": "withBusy",
            "access": "",
            "virtual": false,
            "description": "withBusy mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "busyFor",
            "access": "",
            "virtual": false,
            "description": "Wait busy for",
            "parameters": [
                {
                    "name": "duration",
                    "type": "number",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "Promise.<void>",
                "description": ""
            }
        },
        {
            "name": "busyWhile",
            "access": "",
            "virtual": false,
            "description": "Set busy true while task active",
            "parameters": [
                {
                    "name": "task",
                    "type": "function",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "Promise.<void>",
                "description": ""
            }
        },
        {
            "name": "isBusy",
            "access": "",
            "virtual": false,
            "description": "Is busy or not",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "boolean",
                "description": ""
            }
        },
        {
            "name": "waitWhileBusy",
            "access": "",
            "virtual": false,
            "description": "Wait while busy",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "Promise.<void>",
                "description": ""
            }
        },
        {
            "name": "withEntities",
            "access": "",
            "virtual": false,
            "description": "withEntities mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "addEntities",
            "access": "",
            "virtual": false,
            "description": "Add entities",
            "parameters": [
                {
                    "name": "entities",
                    "type": "Array.<Object>",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "options",
                    "type": "Object",
                    "description": "Optional settings",
                    "default": "{}",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "addEntity",
            "access": "",
            "virtual": false,
            "description": "Add a entity",
            "parameters": [
                {
                    "name": "entity",
                    "type": "Object",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "options",
                    "type": "Object",
                    "description": "Optional settings",
                    "default": "{}",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "deleteEntity",
            "access": "",
            "virtual": false,
            "description": "Delete entity",
            "parameters": [
                {
                    "name": "entity",
                    "type": "Object",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "getEntities",
            "access": "",
            "virtual": false,
            "description": "Get entities",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "Array.<Object>",
                "description": ""
            }
        },
        {
            "name": "receiveEntity",
            "access": "",
            "virtual": false,
            "description": "Receive an entity",
            "parameters": [
                {
                    "name": "entity",
                    "type": "",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "options",
                    "type": "Object",
                    "description": "Optional settings",
                    "default": "{}",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "updateEntity",
            "access": "",
            "virtual": false,
            "description": "Update existing entity",
            "parameters": [
                {
                    "name": "entity",
                    "type": "Object",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "withEntry",
            "access": "",
            "virtual": false,
            "description": "withEntry mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "getEntry",
            "access": "",
            "virtual": false,
            "description": "Get entry values",
            "parameters": [
                {
                    "name": "options",
                    "type": "Object",
                    "description": "",
                    "default": "{}",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "Object",
                "description": ""
            }
        },
        {
            "name": "hasEntryErrorFor",
            "access": "",
            "virtual": false,
            "description": "",
            "parameters": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "boolean",
                "description": ""
            }
        },
        {
            "name": "processEntry",
            "access": "",
            "virtual": false,
            "description": "Process an entry",
            "parameters": [
                {
                    "name": "handler",
                    "type": "function",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "Promise.<void>",
                "description": ""
            }
        },
        {
            "name": "resetEntry",
            "access": "",
            "virtual": false,
            "description": "Reset entry",
            "parameters": [],
            "examples": []
        },
        {
            "name": "setEntry",
            "access": "",
            "virtual": false,
            "description": "Set entry values",
            "parameters": [
                {
                    "name": "values",
                    "type": "Object",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "setEntryErrors",
            "access": "",
            "virtual": false,
            "description": "Set entry errors",
            "parameters": [
                {
                    "name": "errors",
                    "type": "Object",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "withFailure",
            "access": "",
            "virtual": false,
            "description": "withFailure mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "withFilter",
            "access": "",
            "virtual": false,
            "description": "withFilter mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "getFilter",
            "access": "",
            "virtual": false,
            "description": "Get filter",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "Object",
                "description": ""
            }
        },
        {
            "name": "setFilter",
            "access": "",
            "virtual": false,
            "description": "Set filter",
            "parameters": [
                {
                    "name": "filter",
                    "type": "Object",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "setFilterByQ",
            "access": "",
            "virtual": false,
            "description": "Set filters by q",
            "parameters": [],
            "examples": []
        },
        {
            "name": "withForm",
            "access": "",
            "virtual": false,
            "description": "withForm mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "withHistory",
            "access": "",
            "virtual": false,
            "description": "withHistory mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "replaceHistoryByQuery",
            "access": "",
            "virtual": false,
            "description": "Replace history with query",
            "parameters": [
                {
                    "name": "query",
                    "type": "Object",
                    "description": "Query data",
                    "default": "",
                    "optional": "",
                    "nullable": true
                }
            ],
            "examples": []
        },
        {
            "name": "withId",
            "access": "",
            "virtual": false,
            "description": "withId mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "getId",
            "access": "",
            "virtual": false,
            "description": "Get id",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "string",
                "description": "id"
            }
        },
        {
            "name": "isKnownId",
            "access": "",
            "virtual": false,
            "description": "Check if the id is known",
            "parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "boolean",
                "description": ""
            }
        },
        {
            "name": "withLimit",
            "access": "",
            "virtual": false,
            "description": "withLimit mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "getLimit",
            "access": "",
            "virtual": false,
            "description": "Get limit",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "number",
                "description": ""
            }
        },
        {
            "name": "nextLimit",
            "access": "",
            "virtual": false,
            "description": "Next limit",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "number",
                "description": ""
            }
        },
        {
            "name": "setLimit",
            "access": "",
            "virtual": false,
            "description": "Set limit",
            "parameters": [
                {
                    "name": "limit",
                    "type": "number",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "updateToNextLimit",
            "access": "",
            "virtual": false,
            "description": "Update to next limit",
            "parameters": [],
            "examples": []
        },
        {
            "name": "withLocation",
            "access": "",
            "virtual": false,
            "description": "withLocation mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "changeLocationTo",
            "access": "",
            "virtual": false,
            "description": "Change location to url",
            "parameters": [
                {
                    "name": "href",
                    "type": "string",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "getLocationHash",
            "access": "",
            "virtual": false,
            "description": "Get location hash",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "*",
                "description": ""
            }
        },
        {
            "name": "reloadLocation",
            "access": "",
            "virtual": false,
            "description": "Reload current location",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "Promise.<void>",
                "description": ""
            }
        },
        {
            "name": "setLocationHash",
            "access": "",
            "virtual": false,
            "description": "Set location hash",
            "parameters": [
                {
                    "name": "hash",
                    "type": "",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "withPage",
            "access": "",
            "virtual": false,
            "description": "withPage mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "getPage",
            "access": "",
            "virtual": false,
            "description": "Get page data",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "Object",
                "description": ""
            }
        },
        {
            "name": "withQuery",
            "access": "",
            "virtual": false,
            "description": "withQuery mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "getQueryFromSearch",
            "access": "",
            "virtual": false,
            "description": "Get query from search",
            "parameters": [
                {
                    "name": "search",
                    "type": "string",
                    "description": "",
                    "default": "location.search",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "Object",
                "description": ""
            }
        },
        {
            "name": "mergeQueryToSearch",
            "access": "",
            "virtual": false,
            "description": "Merge additional query into search",
            "parameters": [
                {
                    "name": "query",
                    "type": "Object",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "queryWithSearch",
            "access": "",
            "virtual": false,
            "description": "Query with search",
            "parameters": [
                {
                    "name": "search",
                    "type": "",
                    "description": "Location search string",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "object",
                "description": ""
            }
        },
        {
            "name": "withReady",
            "access": "",
            "virtual": false,
            "description": "withReady mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "ifReady",
            "access": "",
            "virtual": false,
            "description": "Do only if ready",
            "parameters": [
                {
                    "name": "task",
                    "type": "function",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "Promise.<*>",
                "description": ""
            }
        },
        {
            "name": "readyWhen",
            "access": "",
            "virtual": false,
            "description": "Set ready when done",
            "parameters": [
                {
                    "name": "task",
                    "type": "function",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "Promise.<*>",
                "description": ""
            }
        },
        {
            "name": "unlessReady",
            "access": "",
            "virtual": false,
            "description": "Do unless ready",
            "parameters": [
                {
                    "name": "task",
                    "type": "function",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "Promise.<*>",
                "description": ""
            }
        },
        {
            "name": "withResult",
            "access": "",
            "virtual": false,
            "description": "withResult mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "resultFor",
            "access": "",
            "virtual": false,
            "description": "Do action and store result",
            "parameters": [
                {
                    "name": "action",
                    "type": "function",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "Promise.<*>",
                "description": "- Action result"
            }
        },
        {
            "name": "withSort",
            "access": "",
            "virtual": false,
            "description": "withSort mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "withTargets",
            "access": "",
            "virtual": false,
            "description": "withTargets mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "addTargets",
            "access": "",
            "virtual": false,
            "description": "Add targets",
            "parameters": [
                {
                    "name": "targets",
                    "type": "",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": []
        },
        {
            "name": "getTargetIds",
            "access": "",
            "virtual": false,
            "description": "Get ids of target",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "Array.<String>",
                "description": ""
            }
        },
        {
            "name": "getTargetRefs",
            "access": "",
            "virtual": false,
            "description": "Get refs of target",
            "parameters": [],
            "examples": [],
            "returns": {
                "type": "Array.<String>",
                "description": ""
            }
        },
        {
            "name": "getTargets",
            "access": "",
            "virtual": false,
            "description": "Get target values",
            "parameters": [],
            "examples": []
        },
        {
            "name": "withValues",
            "access": "",
            "virtual": false,
            "description": "withValues mixin",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "Class to mix",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Mixed class"
            }
        },
        {
            "name": "asClassMixin",
            "access": "",
            "virtual": false,
            "description": "Define as class mixin",
            "parameters": [],
            "examples": []
        },
        {
            "name": "asMethodWrap",
            "access": "",
            "virtual": false,
            "description": "Define method wrapper",
            "parameters": [],
            "examples": []
        },
        {
            "name": "injectProperties",
            "access": "",
            "virtual": false,
            "description": "",
            "parameters": [
                {
                    "name": "Class",
                    "type": "function",
                    "description": "",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [],
            "returns": {
                "type": "function",
                "description": "Injected Class"
            }
        }
    ],
    "properties": [
        {
            "name": "isReady",
            "access": "",
            "virtual": false,
            "description": "Get is ready or not",
            "type": ""
        }
    ]
}
